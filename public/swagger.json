{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"AuthResponse": {
				"properties": {
					"status": {
						"type": "number",
						"format": "double"
					},
					"message": {
						"type": "string"
					},
					"token": {
						"type": "string"
					}
				},
				"required": [
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Meta": {
				"description": "Meta information for pagination",
				"properties": {
					"totalPages": {
						"type": "number",
						"format": "double"
					},
					"currentPage": {
						"type": "number",
						"format": "double"
					},
					"totalDocuments": {
						"type": "number",
						"format": "double"
					},
					"documentsPerPage": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"totalPages",
					"currentPage",
					"totalDocuments",
					"documentsPerPage"
				],
				"type": "object",
				"additionalProperties": false
			},
			"KatasResponse": {
				"properties": {
					"status": {
						"type": "number",
						"format": "double"
					},
					"message": {
						"type": "string"
					},
					"katas": {
						"items": {},
						"type": "array"
					},
					"meta": {
						"$ref": "#/components/schemas/Meta"
					}
				},
				"required": [
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UsersResponse": {
				"properties": {
					"status": {
						"type": "number",
						"format": "double"
					},
					"message": {
						"type": "string"
					},
					"users": {
						"items": {},
						"type": "array"
					},
					"meta": {
						"$ref": "#/components/schemas/Meta"
					}
				},
				"required": [
					"status"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "open-katas-back",
		"version": "0.0.1",
		"license": {
			"name": "MIT"
		},
		"contact": {}
	},
	"openapi": "3.0.0",
	"paths": {
		"/api/auth/register": {
			"post": {
				"operationId": "RegisterUsers",
				"responses": {
					"201": {
						"description": "User registered successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AuthResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"status": 201,
											"message": "User registered successfully"
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "User registration failed",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AuthResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"status": 400,
											"message": "Something went wrong"
										}
									}
								}
							}
						}
					}
				},
				"description": "Endpoint to register new User",
				"tags": [
					"AuthController"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"name": {
										"type": "string",
										"description": "Name"
									},
									"email": {
										"type": "string",
										"description": "Email"
									},
									"password": {
										"type": "string",
										"description": "Password"
									},
									"age": {
										"type": "number",
										"format": "double",
										"description": "Age"
									}
								},
								"required": [
									"name",
									"email",
									"password",
									"age"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/api/auth/login": {
			"post": {
				"operationId": "LoginUsers",
				"responses": {
					"200": {
						"description": "User logged successflully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AuthResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"status": 200,
											"message": "Welcome User",
											"token": "tokenExample"
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Something went wrong",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AuthResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"status": 400,
											"message": "Something went wrong"
										}
									}
								}
							}
						}
					}
				},
				"description": "Endpoint to login",
				"tags": [
					"AuthController"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"email": {
										"type": "string",
										"description": "Email"
									},
									"password": {
										"type": "string",
										"description": "Password"
									}
								},
								"required": [
									"email",
									"password"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/api/katas": {
			"get": {
				"operationId": "GetKatas",
				"responses": {
					"200": {
						"description": "Katas obtained successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/KatasResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"status": 200,
											"katas": [
												{
													"_id": "62ed460ed73c1af651554a80",
													"name": "My name modified",
													"level": "HARD",
													"stars": 5,
													"creator": "62ead98822cd04870ab7278b",
													"language": "js",
													"participants": [
														"62ead98822cd04870ab7278b"
													]
												}
											],
											"meta": {
												"totalPages": 1,
												"currentPage": 1,
												"documentsPerPage": 10,
												"totalDocuments": 1
											}
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Something went wrong",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/KatasResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"status": 400,
											"message": "Something went wrong"
										}
									}
								}
							}
						}
					}
				},
				"description": "Endpoint to get all Katas (or one by ID)",
				"tags": [
					"KataController"
				],
				"security": [],
				"parameters": [
					{
						"description": "Page to retrieve",
						"in": "query",
						"name": "page",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Limits the number of Katas retrieved",
						"in": "query",
						"name": "limit",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Kata ID to retrieve",
						"in": "query",
						"name": "kataId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Kata level",
						"in": "query",
						"name": "level",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Kata language",
						"in": "query",
						"name": "language",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Sort that will be applied (ex: name_asc or name_des)",
						"in": "query",
						"name": "sortType",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"delete": {
				"operationId": "DeleteKata",
				"responses": {
					"200": {
						"description": "Kata deleted successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/KatasResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"status": 200,
											"message": "Kata deleted successfully"
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Something went wrong",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/KatasResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"status": 400,
											"message": "Something went wrong"
										}
									}
								}
							}
						}
					}
				},
				"description": "Endpoint to delete Kata by ID",
				"tags": [
					"KataController"
				],
				"security": [],
				"parameters": [
					{
						"description": "Kata ID to delete",
						"in": "query",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateKatas",
				"responses": {
					"201": {
						"description": "Kata created successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/KatasResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"status": 201,
											"message": "Kata created successfully"
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Something went wrong",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/KatasResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"status": 400,
											"message": "Something went wrong"
										}
									}
								}
							}
						}
					}
				},
				"description": "Endpoint to create Kata",
				"tags": [
					"KataController"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"name": {
										"type": "string",
										"description": "Name"
									},
									"description": {
										"type": "string",
										"description": "Description"
									},
									"level": {
										"type": "string",
										"description": "Level"
									},
									"language": {
										"type": "string",
										"description": "Language"
									},
									"solution": {
										"type": "string",
										"description": "Solution"
									}
								},
								"required": [
									"name",
									"description",
									"level",
									"language",
									"solution"
								],
								"type": "object"
							}
						}
					}
				}
			},
			"put": {
				"operationId": "UpdateKatas",
				"responses": {
					"200": {
						"description": "Kata updated successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/KatasResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"status": 200,
											"message": "Kata updated successfully"
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Something went wrong",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/KatasResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"status": 400,
											"message": "Something went wrong"
										}
									}
								}
							}
						}
					}
				},
				"description": "Endpoint to update Kata by ID",
				"tags": [
					"KataController"
				],
				"security": [],
				"parameters": [
					{
						"description": "Kata ID to update",
						"in": "query",
						"name": "kataId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"name": {
										"type": "string",
										"description": "Name"
									},
									"description": {
										"type": "string",
										"description": "Description"
									},
									"level": {
										"type": "string",
										"description": "Level"
									},
									"language": {
										"type": "string",
										"description": "Language"
									},
									"solution": {
										"type": "string",
										"description": "Solution"
									}
								},
								"required": [
									"name",
									"description",
									"level",
									"language",
									"solution"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/api/katas/vote": {
			"put": {
				"operationId": "VoteKatas",
				"responses": {
					"200": {
						"description": "Kata voted successfully",
						"content": {
							"application/json": {
								"schema": {},
								"examples": {
									"Example 1": {
										"value": {
											"status": 200,
											"message": "Vote for kata completed"
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Something went wrong",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/KatasResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"status": 400,
											"message": "Something went wrong"
										}
									}
								}
							}
						}
					}
				},
				"description": "Endpoint to vote for Kata by ID",
				"tags": [
					"KataController"
				],
				"security": [],
				"parameters": [
					{
						"description": "Kata ID to vote",
						"in": "query",
						"name": "kataId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/katas/solve": {
			"put": {
				"operationId": "SolveKatas",
				"responses": {
					"200": {
						"description": "Kata solved successfully",
						"content": {
							"application/json": {
								"schema": {},
								"examples": {
									"Example 1": {
										"value": {
											"status": 200,
											"message": "Kata solved successfully"
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Something went wrong",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/KatasResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"status": 400,
											"message": "Something went wrong"
										}
									}
								}
							}
						}
					}
				},
				"description": "Endpoint to solve Kata",
				"tags": [
					"KataController"
				],
				"security": [],
				"parameters": [
					{
						"description": "Kata ID to solve",
						"in": "query",
						"name": "kataId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/users": {
			"get": {
				"operationId": "GetUsers",
				"responses": {
					"200": {
						"description": "Users obtained successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UsersResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"status": 200,
											"users": [
												{
													"_id": "62ead98822cd04870ab7278b",
													"name": "Martín",
													"email": "martin@email.com",
													"age": 30,
													"katas": [
														"62eae045d5c645439b3a026a",
														"62eaf1e8946b8624a7901072"
													]
												},
												{
													"_id": "62ed2ef188b1ccf16afb5d89",
													"name": "Jorge",
													"email": "jorge@email.com",
													"age": 30,
													"katas": []
												}
											],
											"totalPages": 1,
											"currentPage": 1
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Something went wrong",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UsersResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"status": 400,
											"message": "Something went wrong"
										}
									}
								}
							}
						}
					}
				},
				"description": "Endpoint to Get Users (includes pagination)",
				"tags": [
					"UserController"
				],
				"security": [],
				"parameters": [
					{
						"description": "Page that is requested",
						"in": "query",
						"name": "page",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Number of users that is going to be retreived",
						"in": "query",
						"name": "limit",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "User ID to retreive",
						"in": "query",
						"name": "id",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"delete": {
				"operationId": "DeleteUser",
				"responses": {
					"200": {
						"description": "User deleted successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UsersResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"status": 400,
											"message": "User deleted successfully"
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Something went wrong",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UsersResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"status": 400,
											"message": "Something went wrong"
										}
									}
								}
							}
						}
					}
				},
				"description": "Endpoint to delete User by ID",
				"tags": [
					"UserController"
				],
				"security": [],
				"parameters": [
					{
						"description": "User ID to delete",
						"in": "query",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdateUsers",
				"responses": {
					"200": {
						"description": "User updated successfully",
						"content": {
							"application/json": {
								"schema": {},
								"examples": {
									"Example 1": {
										"value": {
											"status": 200,
											"message": "User updated successfully"
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Something went wrong",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UsersResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"status": 400,
											"message": "Something went wrong"
										}
									}
								}
							}
						}
					}
				},
				"description": "Endpoint to update User by ID",
				"tags": [
					"UserController"
				],
				"security": [],
				"parameters": [
					{
						"description": "User ID to update",
						"in": "query",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"name": {
										"type": "string",
										"description": "Name"
									},
									"email": {
										"type": "string",
										"description": "Email"
									},
									"age": {
										"type": "number",
										"format": "double",
										"description": "Age"
									}
								},
								"required": [
									"name",
									"email",
									"age"
								],
								"type": "object"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}